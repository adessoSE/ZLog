<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>de.adesso.logging</groupId>
		<artifactId>zlog-parent</artifactId>
		<version>0.0.1-SNAPSHOT</version>
		<relativePath>../pom.xml</relativePath>
	</parent>
	<groupId>de.adesso.logging</groupId>
	<artifactId>zlog-docker</artifactId>
	<description>Docker Build Project</description>
	<properties>
		<java.version>21</java.version>
		<spring-cloud.version>Hoxton.SR9</spring-cloud.version>
	</properties>
	<build>
		<plugins>
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<version>2.4.1</version>
				<configuration>
					<filesets>
						<fileset>
							<directory>temp</directory>
							<includes>
								<include>**</include>
							</includes>
							<followSymlinks>false</followSymlinks>
						</fileset>
					</filesets>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.3.1</version>
				<executions>
					<execution>
						<id>copy-resource-jar</id>
						<phase>install</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>temp/jar</outputDirectory>
							<resources>
								<resource>
									<directory>../gateway/target/</directory>
									<includes>
										<include>*.jar</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-resource-web-build</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>temp/gui</outputDirectory>
							<resources>
								<resource>
									<directory>../client/build</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.6.0</version>
				<executions>

					<!-- Remove existing image from local repo -->
					<execution>
						<id>docker-clean</id>
						<phase>install</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>docker</executable>
							<workingDirectory>${project.basedir}</workingDirectory>
							<arguments>
								<argument>rmi</argument>
								<argument>${project.groupId}/${project.artifactId}:${project.version}</argument>
							</arguments>
							<successCodes>
								<successCode>0</successCode>
								<successCode>1</successCode>
							</successCodes>
						</configuration>
					</execution>

    <!-- 
      Create new docker image using Dockerfile which must be present in current working directory.
      Tag the image using maven project version information.
    -->
					<execution>
						<id>docker-build</id>
						<phase>install</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>docker</executable>
							<workingDirectory>${project.basedir}</workingDirectory>
							<arguments>
								<argument>build</argument>
								<argument>-t</argument>
								<argument>${project.groupId}/${project.artifactId}:${project.version}</argument>
								<argument>.</argument>
							</arguments>
						</configuration>
					</execution>


					<!-- Login and Push the image to a docker repo. -->
   <!-- <execution>
      <id>docker-login</id>
      <phase>deploy</phase>
      <goals>
        <goal>exec</goal>
      </goals>
      <configuration>
        <executable>docker</executable>
        <workingDirectory>${project.basedir}</workingDirectory>
        <arguments>
          <argument>login</argument>
          <argument>-u</argument>
          <argument>${docker.user}</argument>
          <argument>-p</argument>
          <argument>${docker.password}</argument>
          <argument>${docker.url}</argument>
        </arguments>
      </configuration>
    </execution> -->

				</executions>
			</plugin>
		</plugins>
	</build>

</project>
